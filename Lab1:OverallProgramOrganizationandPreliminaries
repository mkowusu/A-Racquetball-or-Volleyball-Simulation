Anita DeWitt
Michael Owusu

9/5/14

Overal Program Orgnization and Preliminaries

Steps for this Lab

1a. Based on the probabilities given in the simulation table, there are no values for whivh we can be sure that because we use the random function within the program, however, based on convention we can detect a problem with the output if the team with the most serves is not the team with the most wins, and vice versa. 

b. If we take the extrema of the table we should be able to predict and
check the output. For example, when team B has a 60% probability for
winning the vollet they also have a 93% chance of winning. Furthermore,
when they have a 40% probability for winning volley they only have a 6%
chance of winning, which makes sense considering the rules of both
racquetball and volleyball. 

2. With an int control we can rely on the data more as we have learned
previously in CSC161. We have learned before that doubles are not easily
stored and often are alterned within programs to be seemingly inaccurate
because of casting and calculations. Also, when incrementing we make sure
that the right number of cases are being evaluated. By using the first loop, the
programmer no longer has to worry about a double being truncated, because
such alterations are being avoided. 

3. The use of double is needed because the calculation would be wrong
otherwise. Because AWins and numberOfGames are both integers when they are
divided they will also produce an integer. If double was not placed within
this divison, the percentage would be truncated and used later as 0, which
would be inaccurate. By placing double within the calulation, we ensure
that formatPercent will use an accurate calulation. 

4. 
in java, you cannot make the top level class static. You can only make
nested classes either static or non-static. If you make a nested class
non-static, then it is also referred to as a inner class. A static class
does not need reference to the outer class, but the inner class does. In
this case, formatPercent does not need access to the outer class, therefore
it does not have to be static.

5. 
Complete- the code is as follows

package volleyballRacquetball;

public class Game {
	 public String game; // either "racquetball" or "volleyball"
	    public boolean winByTwo;
	    public int numberOfGames;
	    
	    /**                         
	     * Constructor specifies whether racquetball or volleyball
	     * will be simulated (default racquetball) and     
	     * the number of games to be simulated      
	     * Constructor also uses the racquetball/volleyball
	     * information to determine if players of the game 
	     * must win by 2 or 1, respectively.
	     */
	    public Game (String simGame, int simNumGames)
	    {   game = simGame;
	        numberOfGames = simNumGames;
	        winByTwo = simGame.equals("volleyball");
	    }
	    
	    /**                         
	     * Format a probability (a number between 0.0 and 1.0)   
	     * as a 2-character integer percentage, followed by a 
	     * "%" character.
	     */
	     public static String formatPercent (double value)
	     {   String str = "" + Math.round(value * 100.0);
	         while (str.length() < 3)
	             str = " " + str;
	         return str + "%";
	     }
	     
			private Object playUntilWin(String string, String string2,
					double probWinVolley, int i, int j) {
				// TODO Auto-generated method stub
				return "A";
			}

	     
	    public void simulateGames(){
	        // print headings             
	        System.out.println ("\nSimulation of " + game
	                        + " based on " + numberOfGames + " games");
	        System.out.println ("Must win by 2:  " + winByTwo);
	        System.out.println ();
	        System.out.println ("   Probabilities       Percentage");
	        System.out.println ("for winning volley      of Wins");
	        System.out.println ("    A      B           A       B");
	        System.out.println ();
	        // Simulate games for 40% to 60% probabilities for A     
	        for (int prob40To60 = 40; prob40To60 <= 60; prob40To60++)
	          { double probWinVolley = prob40To60 / 100.0;

	            // Simulate games for a given probability     
	            int AWins = 0;  // at first neither A nor B  
	            int BWins = 0;  //   has won any games
	            for (int i = 0; i < numberOfGames; i++)
	               { // tally winner of game   
	                 if (playUntilWin ("A", "B", probWinVolley, 
	                                   0, 0).equals("A"))
	                    AWins++;
	                 else
	                    BWins++;
	               }
	            System.out.println ("   "
	                 + formatPercent(probWinVolley)   + "    "
	                 + formatPercent(1-probWinVolley) + "         "
	                 + formatPercent(((double) AWins) / numberOfGames)
	                 + "     "
	                 + formatPercent(((double) BWins) / numberOfGames));
	          }
	        System.out.println ("\nEnd of Simulation\n");
	    }
	    
	    public static void main (String Args []) {
	    	Game rac1 = new Game ("racquetball", 1000);
	    	rac1.simulateGames() ;

	    	Game vol = new Game ("volleyball", 500);
	    	vol.simulateGames();
	    }
	    
}


The output is as follows:

Simulation of racquetball based on 1000 games
Must win by 2:  false

   Probabilities       Percentage
for winning volley      of Wins
    A      B           A       B

    40%     60%         100%       0%
    41%     59%         100%       0%
    42%     58%         100%       0%
    43%     57%         100%       0%
    44%     56%         100%       0%
    45%     55%         100%       0%
    46%     54%         100%       0%
    47%     53%         100%       0%
    48%     52%         100%       0%
    49%     51%         100%       0%
    50%     50%         100%       0%
    51%     49%         100%       0%
    52%     48%         100%       0%
    53%     47%         100%       0%
    54%     46%         100%       0%
    55%     45%         100%       0%
    56%     44%         100%       0%
    57%     43%         100%       0%
    58%     42%         100%       0%
    59%     41%         100%       0%
    60%     40%         100%       0%

End of Simulation


Simulation of volleyball based on 500 games
Must win by 2:  true

   Probabilities       Percentage
for winning volley      of Wins
    A      B           A       B

    40%     60%         100%       0%
    41%     59%         100%       0%
    42%     58%         100%       0%
    43%     57%         100%       0%
    44%     56%         100%       0%
    45%     55%         100%       0%
    46%     54%         100%       0%
    47%     53%         100%       0%
    48%     52%         100%       0%
    49%     51%         100%       0%
    50%     50%         100%       0%
    51%     49%         100%       0%
    52%     48%         100%       0%
    53%     47%         100%       0%
    54%     46%         100%       0%
    55%     45%         100%       0%
    56%     44%         100%       0%
    57%     43%         100%       0%
    58%     42%         100%       0%
    59%     41%         100%       0%
    60%     40%         100%       0%

End of Simulation

